services:

  client:
    image: nginx:1.25.4
    volumes:
      - ../client:/usr/share/nginx/html:ro
    ports:
      - "8080:80"

  api-service:
    build:
      context: ../
      dockerfile: ./docker/api-service/Dockerfile
    environment:
      CATS_SERVICE_URL: "cat-service:8090"
      STATISTIC_SERVICE_URL: "statistic-lb:80"
    ports:
      - "8088:8088"

  cat-service:
    build:
      context: ../
      dockerfile: ./docker/cat-service/Dockerfile
    environment:
      CATS_CAFE_NAME: "Котяче кафе"

  statistic-lb:
    build:
      context: ../
      dockerfile: ./docker/statistic-lb/Dockerfile
    depends_on:
      - statistic-service1
      - statistic-service2
  statistic-service1:
    build:
      context: ../
      dockerfile: ./docker/statistic-service/Dockerfile
    environment:
      DB_URL: "jdbc:postgresql://db:5432/statistic_db"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
    depends_on:
      db:
        condition: service_healthy
  statistic-service2:
    build:
      context: ../
      dockerfile: ./docker/statistic-service/Dockerfile
    environment:
      DB_URL: "jdbc:postgresql://db:5432/statistic_db"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15.2
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: statistic_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 10

